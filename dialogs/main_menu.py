from aiogram.fsm.context import FSMContext
from aiogram.utils.i18n import FSMI18nMiddleware
from aiogram_dialog import Dialog, Window
from aiogram_dialog.widgets.kbd import Button, Row
from aiogram.fsm.state import StatesGroup, State
from aiogram_dialog import DialogManager
from aiogram.types import CallbackQuery
from utils.i18n import Translate
from middlewares.i18n import i18n, i18n_middleware

_ = i18n.gettext

class MainMenuSG(StatesGroup):
    main = State()
    about = State()
    help = State()
    settings = State()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ –º–µ–∂–¥—É –æ–∫–Ω–∞–º–∏
async def on_about_clicked(event, widget, manager: DialogManager):
    await manager.done()
    await manager.start(MainMenuSG.about)



async def on_help_clicked(event, widget, manager: DialogManager):
    await manager.done()
    await manager.start(MainMenuSG.help)


async def go_back_main_menu(event, widget, manager: DialogManager):
    await manager.done()
    await manager.start(MainMenuSG.main)


async def start_voice_handler(event, widget, manager: DialogManager):
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ FSMContext
    state: FSMContext = manager.middleware_data['state']
    user_data = await state.get_data()
    user_language = user_data.get('language_code', 'en')  # –ï—Å–ª–∏ —è–∑—ã–∫–∞ –Ω–µ—Ç ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º "en"

    # –õ–æ–∫–∞–ª–∏–∑—É–µ–º –ø–µ—Ä–µ–≤–æ–¥ —á–µ—Ä–µ–∑ i18n
    i18n.ctx_locale.set(user_language)

    await manager.done()
    await event.message.answer(i18n.gettext("Send a voice message"))
    await manager.done()


async def settings_handler(event, widget, manager: DialogManager):
    await manager.done()
    await manager.start(MainMenuSG.settings)

async def close_handler(event, widget, manager: DialogManager):
    await manager.done()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Å–º–µ–Ω—ã —è–∑—ã–∫–∞
async def set_language(event: CallbackQuery, button: Button, manager: DialogManager):
    language_code = button.widget_id.split("_")[-1]

    state: FSMContext = manager.middleware_data['state']

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ FSMContext
    await state.update_data(language_code=language_code)

    # –ú–µ–Ω—è–µ–º —è–∑—ã–∫ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ i18n_middleware
    await i18n_middleware.set_locale(state, locale=language_code)
    await i18n_middleware.set_locale(manager.middleware_data["state"], locale=language_code)

    await event.message.answer(
        _("Language successfully changed: {language}").format(
            language="üá¨üáß English" if language_code == "en" else "üá∑üá∫ –†—É—Å—Å–∫–∏–π"
        )
    )
    await manager.start(MainMenuSG.main)
    await manager.done()


from aiogram_dialog.widgets.text import Text



# –û–ø–∏—Å–∞–Ω–∏–µ –æ–∫–æ–Ω –¥–∏–∞–ª–æ–≥–∞
main_menu_dialog = Dialog(
    Window(
        Translate("Welcome to the main menu!\nChoose an action:"),
        Row(
            Button(Translate("‚ñ∂Ô∏è Start translation"), id="start_voice", on_click=start_voice_handler),
        ),
        Row(
            Button(Translate("üìñ About the bot"), id="about", on_click=on_about_clicked),
            Button(Translate("‚ùì Help"), id="help", on_click=on_help_clicked),
        ),
        Row(
            Button(Translate("‚öôÔ∏è Settings"), id="settings", on_click=settings_handler),
        ),
        Row(
            Button(Translate("‚ùå"), id="close", on_click=close_handler),
        ),
        state=MainMenuSG.main,
    ),

    Window(
        Translate("Settings:\nChoose your language:"),
        Row(
            Button(Translate("üá¨üáß English"), id="lang_en", on_click=set_language),
            Button(Translate("üá∑üá∫ Russian"), id="lang_ru", on_click=set_language),
        ),
        Button(Translate("‚¨ÖÔ∏è Back"), id="back", on_click=go_back_main_menu),
        state=MainMenuSG.settings,
    ),

    Window(
        Translate("About the bot."),
        Row(
            Button(Translate("‚¨ÖÔ∏è Back"), id="back", on_click=go_back_main_menu),
        ),
        state=MainMenuSG.about,
    ),

    Window(
        Translate("Help."),
        Row(
            Button(Translate("‚¨ÖÔ∏è Back"), id="back", on_click=go_back_main_menu),
        ),
        state=MainMenuSG.help,
    )
)
